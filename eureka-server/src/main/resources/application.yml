spring:
  profiles:
    active: test
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

---
spring:
  profiles: dev
  application:
    name: eureka
eureka:
  instance:
    hostname: ${spring.application.name}
#    lease-renewal-interval-in-seconds: 30 服务和注册中心的心跳间隔时间，默认为30s
#    lease-expiration-duration-in-seconds: 90 服务和注册中心的心跳超时时间，默认为90s
#    environment:
#    data-center-info:
  client:
#    registerWithEureka: false
#    fetchRegistry: false
#    prefer-same-zone-eureka: true
#    region: shanghai
#    availability-zones:
#      shagnhai: zone-1,zone-2 #一定要注意availability-zones的顺序，必须把Service跟同一zone写在前面
#    serviceUrl:
#      zone-1: http://localhost:${server.port}/eureka/
#      zone-2: http://localhost:${server.port}/eureka/
    serviceUrl:
      defaultZone: http://localhost:${server.port}/eureka/
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 15000
    renewal-threshold-update-interval-ms: 10000
    renewal-percent-threshold: 0.45
server:
  port: 8090

---
spring:
  profiles: docker
  application:
    name: eureka
eureka:
  instance:
    hostname: ${spring.application.name}
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${spring.application.name}:${server.port}/eureka/
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 15000
    renewal-percent-threshold: 0.45
    renewal-threshold-update-interval-ms: 10000
server:
  port: 8090

---
spring:
  profiles: peer1
  application:
    name: registry-server
eureka:
  instance:
    hostname: ${spring.application.name}-1
    prefer-ip-address: false
  client:
    serviceUrl:
      defaultZone: http://registry-server-2:8092/eureka/,http://registry-server-3:8093/eureka/
    register-with-eureka: true
    fetch-registry: false
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 15000
    renewal-percent-threshold: 0.45
#    renewal-threshold-update-interval-ms: 10000
server:
  port: 8091

---
spring:
  profiles: peer2
  application:
    name: registry-server
eureka:
  instance:
    hostname: ${spring.application.name}-2
    prefer-ip-address: false
  client:
    serviceUrl:
      defaultZone: http://registry-server-1:8091/eureka/,http://registry-server-3:8093/eureka/
    register-with-eureka: true
    fetch-registry: false
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 15000
    renewal-percent-threshold: 0.45
#    renewal-threshold-update-interval-ms: 10000
server:
  port: 8092

---
spring:
  profiles: peer3
  application:
    name: registry-server
eureka:
  instance:
    hostname: ${spring.application.name}-3
    prefer-ip-address: false
  client:
    serviceUrl:
      defaultZone: http://registry-server-1:8091/eureka/,http://registry-server-2:8092/eureka/
    register-with-eureka: true
    fetch-registry: false
  server:
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 15000
    renewal-percent-threshold: 0.45
#    renewal-threshold-update-interval-ms: 10000
server:
  port: 8093
